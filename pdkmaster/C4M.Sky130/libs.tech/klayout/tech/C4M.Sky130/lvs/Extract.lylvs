<?xml version='1.0' encoding='utf-8'?>
<klayout-macro><description /><version /><category>lvs</category><prolog /><epilog /><doc /><autorun>false</autorun><autorun-early>false</autorun-early><shortcut /><show-in-menu>true</show-in-menu><group-name>lvs_scripts</group-name><menu-path>tools_menu.lvs.end</menu-path><interpreter>dsl</interpreter><dsl-interpreter-name>lvs-dsl-xml</dsl-interpreter-name><text># Autogenerated file. Changes will be overwritten

report_netlist

flat

# Define layers
dnm = input(64, 18)
nwm = input(64, 20)
hvtp = input(78, 44)
lvtn = input(125, 44)
nsdm = input(93, 44)
psdm = input(94, 20)
hvi = input(75, 20)
difftap_pin = input(65, 16)
difftap_block = input(100, 10)
difftap = input(65, 20)
poly_pin = input(66, 16)
poly_block = input(100, 20)
poly = input(66, 20)
li_pin = input(67, 16)
li_block = input(100, 40)
li = input(67, 20)
m1_pin = input(68, 16)
m1_block = input(100, 60)
m1 = input(68, 20)
m2_pin = input(69, 16)
m2_block = input(100, 80)
m2 = input(69, 20)
capm = input(89, 44)
m3_pin = input(70, 16)
m3_block = input(100, 100)
m3 = input(70, 20)
m4_pin = input(71, 16)
m4_block = input(100, 120)
m4 = input(71, 20)
cap2m = input(97, 44)
m5_pin = input(72, 16)
m5_block = input(100, 140)
m5 = input(72, 20)
licon_block = input(100, 30)
mcon_block = input(100, 50)
via_block = input(100, 70)
via2_block = input(100, 90)
via3_block = input(100, 110)
via4_block = input(100, 130)
licon = input(66, 44)
mcon = input(67, 44)
via = input(68, 44)
via2 = input(69, 44)
via3 = input(70, 44)
via4 = input(71, 44)
areaid_sc = input(81, 4)
pad = input(76, 20)
pnp = input(82, 44)
areaid_diode = input(81, 23)
polyres = input(66, 13)
diffres = input(65, 13)
npn = input(82, 20)
prBoundary = input(235, 4)
substrate__Sky130 = (extent.sized(0.34)-nwm)
difftap__conn = (difftap-(diffres+poly))
difftap__conn__nsdm = (difftap__conn&amp;nsdm)
difftap__conn__psdm = (difftap__conn&amp;psdm)
difftap__conn__lvtn = (difftap__conn&amp;lvtn)
difftap__conn__hvtp = (difftap__conn&amp;hvtp)
poly__conn = (poly-polyres)
gate__hvmosgate = (difftap&amp;poly__conn&amp;hvi)
gate__mosgate = (difftap&amp;poly__conn&amp;(extent.sized(0.34)-(hvi+areaid_sc)))
gate__mosgate_sc = (difftap&amp;poly__conn&amp;areaid_sc&amp;(extent.sized(0.34)-hvi))
gate__mosfet__nfet_01v8 = ((gate__mosgate&amp;nsdm)-nwm)
gate__mosfet__nfet_01v8_lvt = ((gate__mosgate&amp;nsdm&amp;lvtn)-nwm)
gate__mosfet__nfet_01v8_sc = ((gate__mosgate_sc&amp;nsdm)-nwm)
gate__mosfet__nfet_g5v0d10v5 = ((gate__hvmosgate&amp;nsdm)-nwm)
gate__mosfet__pfet_01v8 = (gate__mosgate&amp;psdm&amp;nwm)
gate__mosfet__pfet_01v8_hvt = (gate__mosgate&amp;psdm&amp;hvtp&amp;nwm)
gate__mosfet__pfet_01v8_lvt = (gate__mosgate&amp;psdm&amp;lvtn&amp;nwm)
gate__mosfet__pfet_g5v0d10v5 = (gate__hvmosgate&amp;psdm&amp;nwm)
resistor__pdiff_res = (difftap&amp;diffres&amp;nsdm)
indicators__resistor__pdiff_res = (diffres)
body__resistor__pdiff_res = (resistor__pdiff_res&amp;indicators__resistor__pdiff_res)
resistor__ndiff_res = (difftap&amp;diffres&amp;nsdm)
indicators__resistor__ndiff_res = (diffres)
body__resistor__ndiff_res = (resistor__ndiff_res&amp;indicators__resistor__ndiff_res)
resistor__poly_res = (poly&amp;polyres)
indicators__resistor__poly_res = (polyres)
body__resistor__poly_res = (resistor__poly_res&amp;indicators__resistor__poly_res)
mimcap__MIM_m3_capm = capm
mimcap__MIM_m4_cap2m = cap2m
diode__ndiode = (difftap&amp;areaid_diode&amp;nsdm)
diode__pdiode = (difftap&amp;areaid_diode&amp;psdm)

# Connectivity
# connect(substrate:Sky130,wafer)
connect(substrate__Sky130, extent.sized(0.34))
# connect(difftap,difftap.pin)
connect(difftap, difftap_pin)
# connect(difftap__conn,difftap__conn:nsdm)
connect(difftap__conn, difftap__conn__nsdm)
# connect(difftap__conn:nsdm,nwm)
connect(difftap__conn__nsdm, nwm)
# connect(difftap__conn,difftap__conn:psdm)
connect(difftap__conn, difftap__conn__psdm)
# connect(difftap__conn:psdm,substrate:Sky130)
connect(difftap__conn__psdm, substrate__Sky130)
# connect(difftap__conn,difftap__conn:lvtn)
connect(difftap__conn, difftap__conn__lvtn)
# connect(difftap__conn,difftap__conn:hvtp)
connect(difftap__conn, difftap__conn__hvtp)
# connect(poly,poly.pin)
connect(poly, poly_pin)
# connect(li,li.pin)
connect(li, li_pin)
# connect(m1,m1.pin)
connect(m1, m1_pin)
# connect(m2,m2.pin)
connect(m2, m2_pin)
# connect(m3,m3.pin)
connect(m3, m3_pin)
# connect(m4,m4.pin)
connect(m4, m4_pin)
# connect(m5,m5.pin)
connect(m5, m5_pin)
# connect((difftap__conn,poly__conn),licon)
connect(difftap__conn, licon)
connect(poly__conn, licon)
# connect(licon,li)
connect(licon, li)
# connect(li,mcon)
connect(li, mcon)
# connect(mcon,m1)
connect(mcon, m1)
# connect(m1,via)
connect(m1, via)
# connect(via,m2)
connect(via, m2)
# connect(m2,via2)
connect(m2, via2)
# connect(via2,m3)
connect(via2, m3)
# connect((m3,capm),via3)
connect(m3, via3)
connect(capm, via3)
# connect(via3,m4)
connect(via3, m4)
# connect((m4,cap2m),via4)
connect(m4, via4)
connect(cap2m, via4)
# connect(via4,m5)
connect(via4, m5)

# Resistors
# pdiff_res
extract_devices(resistor("pdiff_res", 197.0), {
    "R" =&gt; resistor__pdiff_res, "C" =&gt; difftap__conn,
})
same_device_classes("pdiff_res", "RES")
# ndiff_res
extract_devices(resistor("ndiff_res", 120.0), {
    "R" =&gt; resistor__ndiff_res, "C" =&gt; difftap__conn,
})
same_device_classes("ndiff_res", "RES")
# poly_res
extract_devices(resistor("poly_res", 48.2), {
    "R" =&gt; resistor__poly_res, "C" =&gt; poly__conn,
})
same_device_classes("poly_res", "RES")

# Diodes
# ndiode
extract_devices(diode("sky130_fd_pr__diode_pw2nd_05v5"), {
    "P" =&gt; substrate__Sky130, "N" =&gt; diode__ndiode, "tC" =&gt; difftap__conn
})
# pdiode
extract_devices(diode("sky130_fd_pr__diode_pd2nw_05v5"), {
    "P" =&gt; diode__pdiode, "N" =&gt; nwm, "tA" =&gt; difftap__conn
})

# Transistors
# nfet_01v8
extract_devices(mos4("sky130_fd_pr__nfet_01v8__model"), {
    "SD" =&gt; difftap__conn, "G" =&gt; gate__mosfet__nfet_01v8, "tG" =&gt; poly__conn, "W" =&gt; substrate__Sky130,
})
# nfet_01v8_lvt
extract_devices(mos4("sky130_fd_pr__nfet_01v8_lvt__model"), {
    "SD" =&gt; difftap__conn, "G" =&gt; gate__mosfet__nfet_01v8_lvt, "tG" =&gt; poly__conn, "W" =&gt; substrate__Sky130,
})
# nfet_01v8_sc
extract_devices(mos4("sky130_fd_pr__nfet_01v8__model"), {
    "SD" =&gt; difftap__conn, "G" =&gt; gate__mosfet__nfet_01v8_sc, "tG" =&gt; poly__conn, "W" =&gt; substrate__Sky130,
})
# nfet_g5v0d10v5
extract_devices(mos4("sky130_fd_pr__nfet_g5v0d10v5__model"), {
    "SD" =&gt; difftap__conn, "G" =&gt; gate__mosfet__nfet_g5v0d10v5, "tG" =&gt; poly__conn, "W" =&gt; substrate__Sky130,
})
# pfet_01v8
extract_devices(mos4("sky130_fd_pr__pfet_01v8__model"), {
    "SD" =&gt; difftap__conn, "G" =&gt; gate__mosfet__pfet_01v8, "tG" =&gt; poly__conn, "W" =&gt; nwm,
})
# pfet_01v8_hvt
extract_devices(mos4("sky130_fd_pr__pfet_01v8_hvt__model"), {
    "SD" =&gt; difftap__conn, "G" =&gt; gate__mosfet__pfet_01v8_hvt, "tG" =&gt; poly__conn, "W" =&gt; nwm,
})
# pfet_01v8_lvt
extract_devices(mos4("sky130_fd_pr__pfet_01v8_lvt__model"), {
    "SD" =&gt; difftap__conn, "G" =&gt; gate__mosfet__pfet_01v8_lvt, "tG" =&gt; poly__conn, "W" =&gt; nwm,
})
# pfet_g5v0d10v5
extract_devices(mos4("sky130_fd_pr__pfet_g5v0d10v5__model"), {
    "SD" =&gt; difftap__conn, "G" =&gt; gate__mosfet__pfet_g5v0d10v5, "tG" =&gt; poly__conn, "W" =&gt; nwm,
})

netlist
</text></klayout-macro>